// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> should render and match App snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "height": "100%",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "display": "flex",
          "height": "100%",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/logo.png",
          }
        }
        style={
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "height": 150,
            "width": 150,
          }
        }
        testID="logoImage"
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontSize": 32,
            "marginTop": 20,
            "textAlign": "center",
          }
        }
        testID="logoLabel"
      >
        Hangar
      </Text>
      <View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "margin": 0,
              "width": "100%",
            }
          }
        >
          <Modal
            animationType="none"
            deviceHeight={null}
            deviceWidth={null}
            hardwareAccelerated={false}
            hideModalContentWhileAnimating={false}
            onBackdropPress={[Function]}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onRequestClose={[Function]}
            panResponderThreshold={4}
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            testID="serverErrorModal"
            transparent={true}
            visible={true}
          >
            <View
              accessible={true}
              focusable={true}
              forwardedRef={[Function]}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "black",
                  "bottom": 0,
                  "height": 1334,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 750,
                }
              }
            />
            <View
              deviceHeight={null}
              deviceWidth={null}
              forwardedRef={[Function]}
              hideModalContentWhileAnimating={false}
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              panResponderThreshold={4}
              pointerEvents="box-none"
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              style={
                Object {
                  "borderRadius": 5,
                  "flex": 1,
                  "justifyContent": "flex-end",
                  "margin": 0,
                  "transform": Array [
                    Object {
                      "translateY": 1334,
                    },
                  ],
                }
              }
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 20,
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "gray",
                      "fontSize": 22,
                      "margin": 10,
                      "padding": 30,
                      "textAlign": "center",
                    }
                  }
                  testID="dialogTitle"
                >
                  Unable to reach Hangar server
                </Text>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#843BF2",
                    }
                  }
                  testID="dialogExitButton"
                >
                  <Text
                    style={
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 20,
                        "padding": 14,
                        "textAlign": "center",
                      }
                    }
                  >
                    EXIT
                  </Text>
                </View>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTSafeAreaView>
`;
